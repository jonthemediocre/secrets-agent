# UAP Agent Manifest - VaultAgent
# Level 2 Compliance - Autonomous Secret Management

agentId: "vault-agent"
version: "2.0.0"
uapLevel: 2

# Agent Identity & Purpose
identity:
  name: "VaultAgent"
  symbolicIntent: "Secure autonomous management of encrypted secrets with self-healing capabilities"
  description: "Advanced vault management agent capable of autonomous secret lifecycle management, backup coordination, and security enhancement"
  
roles:
  - secret-manager
  - encryption-guardian
  - backup-coordinator
  - security-auditor

# Lifecycle Compliance
lifecycleCompliance:
  supportsPlan: true
  supportsExecute: true
  supportsCollapse: true
  
planPhase:
  canAnalyzeRequirements: true
  canGenerateStrategy: true
  canAssessRisks: true
  
executePhase:
  canPerformOperations: true
  canHandleErrors: true
  canAdaptToConditions: true
  
collapsePhase:
  canCleanupResources: true
  canGenerateReports: true
  canOptimizeStorage: true

# Capabilities Matrix
capabilities:
  vault_management:
    description: "Full CRUD operations on encrypted vault storage"
    inputTypes: ["application/json", "text/plain"]
    outputTypes: ["application/json"]
    complexity: "high"
    
  secret_lifecycle:
    description: "Manage secret creation, rotation, and deletion"
    inputTypes: ["application/json"]
    outputTypes: ["application/json"]
    complexity: "medium"
    
  backup_coordination:
    description: "Automated backup and recovery operations"
    inputTypes: ["application/json"]
    outputTypes: ["application/json"]
    complexity: "medium"
    
  security_enhancement:
    description: "Autonomous security layer improvements"
    inputTypes: ["application/json"]
    outputTypes: ["application/json"]
    complexity: "high"

# MCP Callable Functions
mcpCallableFunctions:
  vault_operations:
    - initializeVault
    - loadVault
    - saveVault
    - getVaultStats
    
  project_management:
    - createProject
    - getProject
    
  secret_management:
    - addSecret
    - updateSecret
    - deleteSecret
    
  tag_management:
    - getGlobalTags
    - addGlobalTag
    - removeGlobalTag
    
  hook_system:
    - registerHook
    - getHookRegistrations
    
  mutation_system:
    - performMutation
    - getMutationHistory
    
  manifest_generation:
    - generateManifest

# Hook System Events
hooks:
  events:
    vault_loaded:
      description: "Triggered when vault is successfully loaded"
      dataStructure: "{ vault: VaultData, path: string }"
      
    vault_saved:
      description: "Triggered when vault is successfully saved"
      dataStructure: "{ vault: VaultData, path: string, backupCreated: boolean }"
      
    project_created:
      description: "Triggered when new project is created"
      dataStructure: "{ project: Project, vaultPath: string }"
      
    secret_added:
      description: "Triggered when secret is added to project"
      dataStructure: "{ project: string, secret: SecretEntry, source?: string }"
      
    secret_updated:
      description: "Triggered when secret is modified"
      dataStructure: "{ project: string, secretKey: string, changes: any }"
      
    secret_deleted:
      description: "Triggered when secret is removed"
      dataStructure: "{ project: string, secretKey: string }"
      
    backup_created:
      description: "Triggered when backup file is created"
      dataStructure: "{ backupPath: string, originalPath: string }"
      
    vault_error:
      description: "Triggered when vault operation fails"
      dataStructure: "{ error: Error, operation: string, context: any }"

# Mutation Capabilities
mutations:
  add_encryption:
    description: "Add or enhance encryption layers"
    parameters:
      - iterations: "number (PBKDF2 iterations)"
    risksAssessed: true
    rollbackCapable: true
    
  enhance_backup:
    description: "Improve backup strategies"
    parameters:
      - frequency: "string (backup frequency)"
      - retention: "number (retention days)"
      - compression: "boolean (enable compression)"
      - encryptBackups: "boolean (encrypt backups)"
    risksAssessed: true
    rollbackCapable: true
    
  optimize_storage:
    description: "Optimize storage efficiency"
    parameters:
      - compression: "string (compression algorithm)"
      - deduplicate: "boolean (enable deduplication)"
      - cleanupInterval: "string (cleanup frequency)"
    risksAssessed: true
    rollbackCapable: true
    
  add_security_layer:
    description: "Add advanced security features"
    parameters:
      - auditLogging: "boolean (enable audit logs)"
      - accessControl: "string (access control type)"
      - intrusionDetection: "boolean (enable intrusion detection)"
      - automaticLocking: "number (auto-lock timeout)"
    risksAssessed: true
    rollbackCapable: true

# Security Classification
security:
  classification: "HIGH"
  permissions:
    - "vault:read"
    - "vault:write"
    - "vault:backup"
    - "vault:encrypt"
    - "vault:audit"
  dataAccess:
    - "secrets"
    - "projects"
    - "metadata"
    - "audit_logs"
    - "backup_files"
  
  encryptionStandards:
    - "AES-256-GCM"
    - "PBKDF2"
    - "RSA-4096"

# Resource Requirements
resourceRequirements:
  memory: "256MB"
  cpu: "low"
  storage: "variable (depends on vault size)"
  network: false
  diskSpace: "backup space = 5x vault size"

# Integration Points
integrationPoints:
  agents:
    - "ai-project-scanner"
    - "cli-harvester"
    - "security-auditor"
  
  apis:
    - "/api/vault/*"
    - "/api/secrets/*"
    - "/api/backup/*"
  
  events:
    - "vault_operations"
    - "security_events"
    - "backup_events"

# Performance Characteristics
performance:
  responseTime: 
    read: "< 100ms"
    write: "< 500ms"
    backup: "< 2s"
  throughput:
    secrets_per_minute: 1000
    projects_per_minute: 100
  availability: "99.9%"
  scalability: "supports up to 10,000 secrets per vault"

# Autonomous Behavior
autonomousCapabilities:
  selfHealing: true
  selfOptimization: true
  selfMonitoring: true
  adaptiveBehavior: true
  
autonomousDecisions:
  - "automatic backup cleanup"
  - "storage optimization triggers"
  - "security enhancement recommendations"
  - "error recovery strategies"

# Known Compatible Tools
knownTools:
  internal:
    - "AgentSystem"
    - "SecurityValidator"
    - "Logger"
    - "FileSystem"
  
  external:
    - "HashiCorp Vault"
    - "AWS Secrets Manager"
    - "Azure Key Vault"
    - "SOPS encryption"

# Compliance & Standards
compliance:
  standards:
    - "SOC 2 Type II"
    - "GDPR"
    - "HIPAA"
    - "PCI DSS"
  
  auditCapabilities:
    - "comprehensive logging"
    - "immutable audit trail"
    - "real-time monitoring"
    - "compliance reporting"

# Version History
versionHistory:
  - version: "1.0.0"
    changes: "Initial vault management functionality"
  - version: "1.5.0"
    changes: "Added backup and recovery features"
  - version: "2.0.0"
    changes: "Full UAP Level 2 compliance with hooks and mutations"

# Agent Metadata
metadata:
  created: "2024-12-XX"
  lastUpdated: "2024-12-XX"
  maintainer: "UAP Compliance Team"
  documentation: "docs/vault-agent.md"
  testSuite: "tests/vault-agent.test.ts" 