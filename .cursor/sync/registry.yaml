# Sync Registry - Enhanced Specification
version: "1.0"

# Project Identity
project:
  id: "mcp-core"
  name: "MCP Core System"
  type: "primary"
  created_at: "${timestamp}"
  last_sync: "${timestamp}"

# Registry Management
management:
  type: "distributed"
  consistency: "strong"
  replication: "multi_master"
  coordinator: "raft"

# Project Links
linked_projects:
  - id: "vault-engine"
    path: "../vault-engine"
    sync_mode: "real_time"
    priority: "high"
    integrity: "strict"
    
  - id: "core-agents"
    path: "../core-agents"
    sync_mode: "adaptive"
    priority: "medium"
    integrity: "normal"
    
  - id: "tools-registry"
    path: "../tools-registry"
    sync_mode: "batch"
    priority: "low"
    integrity: "normal"

# Watch Paths
watch_paths:
  shared_configs:
    path: "shared/configs"
    mode: "real_time"
    triggers:
      - "config_change"
      - "agent_request"
    actions:
      - "notify_agents"
      - "update_cache"
      
  shared_resources:
    path: "shared/resources"
    mode: "adaptive"
    triggers:
      - "resource_update"
      - "dependency_change"
    actions:
      - "verify_integrity"
      - "update_links"
      
  state:
    path: "state"
    mode: "delta"
    triggers:
      - "state_change"
      - "agent_sync"
    actions:
      - "merge_state"
      - "notify_dependents"

# Sync Rules
sync_rules:
  default:
    mode: "adaptive"
    conflict_resolution: "semantic_merge"
    backup: true
    integrity_check: "hash_tree"
    
  overrides:
    shared_configs:
      mode: "real_time"
      conflict_resolution: "latest_wins"
      backup: true
      integrity_check: "immediate"
      
    state:
      mode: "delta"
      conflict_resolution: "crdt_merge"
      backup: true
      integrity_check: "continuous"

# Agent Integration
agent_sync:
  memory:
    base_path: ".cursor/state/agents"
    pattern: "${agent_name}/memory.json"
    mode: "incremental"
    frequency: "on_change"
    
  context:
    base_path: ".cursor/state/agents"
    pattern: "${agent_name}/context.json"
    mode: "delta"
    frequency: "adaptive"

# Smart Sync Policies
sync_policies:
  predictive:
    enabled: true
    learning_rate: 0.1
    adaptation_window: "1h"
    metrics:
      - "sync_latency"
      - "conflict_rate"
      - "resource_usage"
    
  agent_influenced:
    enabled: true
    agents:
      vault_agent:
        hint: "configs -> real_time"
        weight: 0.8
      
      scaffold_agent:
        hint: "tools -> batch"
        weight: 0.6

# Version Control Integration
vcs_integration:
  enabled: true
  provider: "git"
  branch_strategy: "sync_aware"
  hooks:
    pre_sync: "verify_branch"
    post_sync: "update_refs"

# Recovery Configuration
recovery:
  strategy: "multi_phase"
  max_attempts: 3
  backoff: "exponential"
  
  phases:
    - name: "integrity_check"
      timeout: "5m"
      actions:
        - "verify_fs"
        - "check_consistency"
    
    - name: "repair"
      timeout: "15m"
      actions:
        - "fix_links"
        - "restore_state"
    
    - name: "verification"
      timeout: "5m"
      actions:
        - "validate_repair"
        - "notify_status"

# Link Types
link_types:
  symlink:
    shared_dependencies:
      path: ".cursor/shared/dependencies"
      type: "hard"
      validation: "strict"
      auto_update: true
    
    common_tools:
      path: ".cursor/shared/tools"
      type: "hard"
      validation: "continuous"
      auto_update: true
    
    config_files:
      path: ".cursor/shared/configs"
      type: "symbolic"
      resolution: "dynamic"
      validation: "runtime"
    
    shared_resources:
      path: ".cursor/shared/resources"
      type: "symbolic"
      resolution: "dynamic"
      validation: "runtime"
  
  sync:
    project_state:
      path: ".cursor/state"
      method: "delta"
      frequency: "real_time"
    
    agent_memory:
      path: ".symbols/memory"
      method: "incremental"
      frequency: "adaptive"
    
    context_data:
      path: ".cursor/context"
      method: "intelligent"
      frequency: "on_change"

# Shared Resources
shared:
  dependencies:
    management: "centralized"
    versioning: "semantic"
    deduplication: true
    
  tools:
    management: "distributed"
    versioning: "adaptive"
    auto_update: true
    
  configs:
    management: "hierarchical"
    inheritance: "controlled"
    validation: "continuous"
    
  resources:
    management: "intelligent"
    allocation: "ml_driven"
    optimization: "continuous"

# Sync Patterns
patterns:
  real_time:
    type: "immediate"
    consistency: "strong"
    validation: "strict"
    
  adaptive:
    type: "intelligent"
    frequency: "ml_driven"
    optimization: "resource_aware"
    
  batch:
    type: "scheduled"
    frequency: "configurable"
    aggregation: "smart"

# Change Tracking
tracking:
  method: "distributed"
  granularity: "file_level"
  aggregation: "intelligent"
  
  analysis:
    type: "ml_powered"
    metrics:
      - "change_frequency"
      - "access_patterns"
      - "dependency_impact"

# Performance
performance:
  optimization:
    method: "ml_driven"
    objectives:
      - "sync_speed"
      - "resource_usage"
      - "consistency_level"
    
  caching:
    strategy: "multi_level"
    eviction: "ml_optimized"
    prefetch: "predictive"

# Security
security:
  access_control:
    type: "granular"
    enforcement: "strict"
    validation: "continuous"
    
  encryption:
    type: "end_to_end"
    algorithm: "quantum_safe"
    key_management: "automated"
    
  audit:
    level: "comprehensive"
    analysis: "real_time"
    retention: "policy_based"

# Health Checks
health:
  monitoring:
    type: "distributed"
    frequency: "adaptive"
    analysis: "ml_powered"
    
  recovery:
    method: "automatic"
    strategy: "multi_phase"
    verification: "comprehensive"

# Metrics
metrics:
  collection:
    method: "distributed"
    aggregation: "intelligent"
    analysis: "real_time"
    
  alerting:
    type: "predictive"
    threshold: "adaptive"
    notification: "prioritized" 