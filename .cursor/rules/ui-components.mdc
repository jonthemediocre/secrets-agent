---
description: UI component and styling guidelines using Shadcn UI, Radix UI, and Tailwind
globs: components/.tsx, .css, .scss, ui/.tsx
alwaysApply: false
---
# DEPRECATED: UI Components Guidelines

## ⚠️ This Rule Has Been Split Into Focused Components

This comprehensive UI rule has been split into **4 specialized, focused rules** for better maintainability and clarity:

### 🧩 For Shadcn UI Component Usage
**Use: `552-shadcn-ui-components.mdc`**
- Installation and setup
- Component usage patterns
- Customization and variants
- Performance considerations
- Maintenance and updates
- Integration with other systems

### 🎨 For Tailwind CSS Styling
**Use: `553-tailwind-styling-standards.mdc`**
- Tailwind configuration
- Class organization patterns  
- Responsive design standards
- Animation and transitions
- Dark mode and theming
- Performance optimization

### ♿ For Accessibility Standards
**Use: `554-ui-accessibility-standards.mdc`**
- WCAG 2.1 AA compliance
- Semantic HTML foundations
- ARIA implementation
- Keyboard navigation
- Color and contrast
- Screen reader support

### 🏗️ For Component Architecture
**Use: `555-component-architecture.mdc`**
- Component design principles
- API design patterns
- State management patterns
- Custom hooks patterns
- Error handling
- Performance optimization

## Why This Change?

The original 80-line rule was violating the **single responsibility principle** by covering:
- Component library usage ✂️ **Now 552**
- Styling standards ✂️ **Now 553**  
- Accessibility requirements ✂️ **Now 554**
- Architecture patterns ✂️ **Now 555**

## Migration Guide

### ✅ Continue Using These Patterns:
```tsx
// Shadcn UI imports (552-shadcn-ui-components.mdc)
import { Button } from "@/components/ui/button"

// Tailwind styling (553-tailwind-styling-standards.mdc)
<div className={cn("bg-background text-foreground", className)}>

// Accessibility (554-ui-accessibility-standards.mdc)
<button aria-label="Close dialog" onClick={onClose}>

// Component patterns (555-component-architecture.mdc)
const MyComponent = memo(({ data }) => { ... })
```

### 🔄 New Focused Rules Provide:
- **Deeper guidance** on each topic
- **More examples** and patterns  
- **Better error prevention**
- **Clearer decision frameworks**
- **Comprehensive testing patterns**

## 🎯 Action Required

**Stop referencing `@ui-components.mdc`** and use the specific focused rules:
- **@552-shadcn-ui-components.mdc** for component usage
- **@553-tailwind-styling-standards.mdc** for styling
- **@554-ui-accessibility-standards.mdc** for accessibility
- **@555-component-architecture.mdc** for architecture

This ensures you get the most relevant, detailed guidance for your specific UI development task.

---
*This split follows the **value-based feature prioritization** principle established in `550-value-based-feature-prioritization.mdc` - each rule now has high value and low complexity within its focused domain.* 