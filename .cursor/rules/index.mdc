---
description: 
globs: 
alwaysApply: true
---
---
description: Central index of all MDC rules 
type: always
alwaysApply: true
---

# RULE TYPE: Always
# FILE PATTERNS: Not applicable for Always rules

# InnerCircle MDC Rules Index

This document serves as the central index for all MDC rules in the InnerCircle project. MDC (Markdown Comments) rules provide guidance and standardization for development practices.

## 📚 How to Use MDC Rules

When asking for assistance or writing code, reference relevant MDC rules:

```
@index.mdc @000-base.mdc [+ ADDITIONAL RULES]

Your question or request here...
```

## 📋 Rule Categories

### Core & Architecture (000 & 100 Series)
- [**000-base.mdc**](mdc:VANTA/VANTA/VANTA/000-base.mdc) - Base architectural principles and patterns
- [**002-L1-L2-distinction-and-coevolution.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/002-L1-L2-distinction-and-coevolution.mdc) - Defines L1 (Cursor AI) / L2 (Project) interaction and co-evolution.
- [**003-L1-enforces-L2-scaffolding.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/003-L1-enforces-L2-scaffolding.mdc) - Outlines how L1 rules guide L2 project scaffolding and standards.
- [**004-L1-L2-dependency-check.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/004-L1-L2-dependency-check.mdc) - Ensures L2 project code remains independent of L1/Cursor-specific features.
- [**005-destructive-op-safety.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/005-destructive-op-safety.mdc) - Safety protocol for destructive file operations.
- [**005-L1-general-git-sync-guidelines.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/005-L1-general-git-sync-guidelines.mdc) - L1 guidelines for general Git operations, commit messages, and staging.
- [**006-system-incoherence-protocol.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/006-system-incoherence-protocol.mdc) - Protocol for detecting and resolving system layer incoherence.
- [**007-desktop-commander-best-practices.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/007-desktop-commander-best-practices.mdc) - Best practices for using mcp-desktop-commander tools.
- [**008-backup-and-commit-protocol.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/008-backup-and-commit-protocol.mdc) - Protocol for project backups and git commits.
- [**008-relative-import-preflight.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/008-relative-import-preflight.mdc) - Pre-flight check for relative imports, warns or suggests stubs.
- [**009-L1-promotion-of-L2-framework-rule-index-awareness.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/009-L2-framework-rule-index-awareness.mdc) - Instructs L1 AI to promote awareness and developer use of L2 project-specific rule indexes.
- [**010-mvp-phase-scoping.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/010-mvp-phase-scoping.mdc) - Strategy for prioritizing MVP features in early phases
- [**011-mdc-hygiene-protocol.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/011-mdc-hygiene-protocol.mdc) - Protocol for testing and formatting MDC rules.
- [**012-ai-mdc-authoring-formatting-standards.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/012-ai-mdc-authoring-formatting-standards.mdc) - AI guidelines for authoring and formatting MDC rule files.
- [**013-L1-guides-L2-architecture.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/013-L1-guides-L2-architecture.mdc) - Defines how L1 AI should guide L2 project architecture and component scaffolding.
- [**020-compatibility-check.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/020-compatibility-check.mdc) - Mandates pre-flight checks for core technology stack compatibility.
- [**100-next-components.mdc**](mdc:VANTA/VANTA/VANTA/100-next-components.mdc) - Next.js component standards
- [**100-vanta-coder-overlay.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/100-vanta-coder-overlay.mdc) - Defines the Vanta! Coder agent overlay and principles.
- [**101-vanta-agent-contract.mdc**](mdc:VANTA/VANTA/VANTA/101-vanta-agent-contract.mdc) - Canonical VANTA agent contract and lifecycle principles.
- [**101-event-governance.mdc**](mdc:VANTA/VANTA/.cursor/rules/101-event-governance.mdc) - Governance protocol for the Kernel Event Bus (KEB).
- [**110-feature-parity.mdc**](mdc:VANTA/VANTA/.cursor/rules/110-feature-parity.mdc) - Strategy for maintaining core feature parity across platforms

### UI & Design (100-200 Series)
- [**200-icons.mdc**](mdc:VANTA/VANTA/VANTA/200-icons.mdc) - Icon usage and management
- [**201-vanta-logging-core-requirements.mdc**](mdc:VANTA/VANTA/VANTA/201-vanta-logging-core-requirements.mdc) - Essential logging requirements for VANTA components.
- [**ui-components.mdc**](mdc:VANTA/VANTA/VANTA/ui-components.mdc) - UI component and styling guidelines
- [**golden-ratio-visuals.mdc**](mdc:VANTA/VANTA/VANTA/golden-ratio-visuals.mdc) - Visual design using golden ratio

### Error Handling & Testing (300 Series)
- [**300-error-handling.mdc**](mdc:VANTA/VANTA/VANTA/300-error-handling.mdc) - Error handling guidelines
- [**310-dependency-hygiene.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/310-dependency-hygiene.mdc) - Dependency vulnerability management
- [**311-cross-platform-deps.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/311-cross-platform-deps.mdc) - Cross-platform dependency management guideline
- [**312-static-analysis-checks.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/312-static-analysis-checks.mdc) - Recommend static analysis (lint, type check) configuration.
- [**320-dependency-conflict-resolution-strategy.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/320-dependency-conflict-resolution-strategy.mdc) - Strategy for resolving dependency conflicts.
- [**testing.mdc**](mdc:VANTA/VANTA/VANTA/testing.mdc) - Testing guidelines and practices
- [**llm-test.mdc**](mdc:VANTA/VANTA/VANTA/llm-test.mdc) - LLM testing guidelines

### ADHD Optimization (400 Series)
- [**400-adhd-patterns.mdc**](mdc:VANTA/VANTA/VANTA/400-adhd-patterns.mdc) - ADHD-friendly design patterns
- [**adhd-energy-features.mdc**](mdc:VANTA/VANTA/VANTA/adhd-energy-features.mdc) - Energy-aware UI features

### Data & API (500 Series)
- [**500-prisma.mdc**](mdc:VANTA/VANTA/VANTA/500-prisma.mdc) - Prisma database patterns
- [**501-vanta-memory-principles.mdc**](mdc:VANTA/VANTA/VANTA/501-vanta-memory-principles.mdc) - Canonical principles for VANTA agent memory and RL context.
- [**505-pydantic-schema-design.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/505-pydantic-schema-design.mdc) - Pydantic schema design best practices
- [**prisma.mdc**](mdc:VANTA/VANTA/VANTA/prisma.mdc) - Additional Prisma guidelines
- [**api-routes.mdc**](mdc:VANTA/VANTA/VANTA/api-routes.mdc) - API route implementation guidelines
- [**data-fetching.mdc**](mdc:VANTA/VANTA/VANTA/data-fetching.mdc) - Data fetching with SWR
- [**server-actions.mdc**](mdc:VANTA/VANTA/VANTA/server-actions.mdc) - Next.js server actions

### Documentation, Learning & System Principles (600, 900 Series, Foundational)

- [**600-ai-learnings.mdc**](mdc:VANTA/VANTA/VANTA/600-ai-learnings.mdc) - AI learning documentation
- [**904-core-documentation.mdc**](mdc:VANTA/VANTA/VANTA/904-core-documentation.mdc) - Documentation requirements
- [**904-documentation-index.mdc**](mdc:VANTA/VANTA/VANTA/904-documentation-index.mdc) - Documentation indexing

### External & Open Source (700 Series)
- [**700-opensource-mdc.mdc**](mdc:VANTA/VANTA/VANTA/700-opensource-mdc.mdc) - Open source MDC rules
- [**703-code-source-priority.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/703-code-source-priority.mdc) - Guideline for resolving conflicts between user-provided code and existing AI-managed code state.

### Agent & Automation (900 Series)
- [**900-agent-config.mdc**](mdc:VANTA/VANTA/VANTA/900-agent-config.mdc) - AI agent configuration
- [**auto_attach_package_json.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/auto_attach_package_json.mdc) - Auto-trigger for package.json changes.
- [**901-mdc-agent.mdc**](mdc:VANTA/VANTA/VANTA/901-mdc-agent.mdc) - MDC rules monitoring agent
- [**902-rl-agent.mdc**](mdc:VANTA/VANTA/VANTA/902-rl-agent.mdc) - Reinforcement learning agent
- [**902-visual-asset-linking.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/902-visual-asset-linking.mdc) - Rule for linking visual assets to plans/docs.
- [**903-rl-suggestion.mdc**](mdc:VANTA/VANTA/VANTA/903-rl-suggestion.mdc) - RL suggestion system
- [**904-core-documentation.mdc**](mdc:VANTA/VANTA/VANTA/904-core-documentation.mdc) - Documentation requirements
- [**904-documentation-index.mdc**](mdc:VANTA/VANTA/VANTA/904-documentation-index.mdc) - Documentation indexing
- [**905-orchestrator-agent.mdc**](mdc:VANTA/VANTA/VANTA/905-orchestrator-agent.mdc) - Task orchestration agent
- [**906-documentation-sync.mdc**](mdc:VANTA/VANTA/VANTA/906-documentation-sync.mdc) - Documentation synchronization
- [**906-symbolic-definition-linking.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/906-symbolic-definition-linking.mdc) - Enforces linking definition files (e.g., vanta_agi_definitions.md) to THEPLAN.md.
- [**907-project-snapshot.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/907-project-snapshot.mdc) - Defines project snapshot documentation standards.
- [**907-plan-todo-sync.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/907-plan-todo-sync.mdc) - Suggests reviewing TODO.md after major THEPLAN.md updates.
- [**909-mdc-rule-optimization-protocol.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/909-mdc-rule-optimization-protocol.mdc) - Protocol for MDC Rule Optimizer Agent.
- [**910-vanta-testing-protocol.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/910-vanta-testing-protocol.mdc) - Defines testing standards and required libraries for VANTA Kernel.
- [**910-assistant-autonomy.mdc**](mdc:VANTA/VANTA/VANTA/910-assistant-autonomy.mdc) - Guideline for AI to prioritize self-research
- [**911-ai-response-signature.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/911-ai-response-signature.mdc) - Defines AI response signature fields
- [**912-ai-prompt-assist.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/912-ai-prompt-assist.mdc) - AI prompt assistance and refinement.
- [**912-rule-scope-distinction.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/912-rule-scope-distinction.mdc) - Clarifies scope of .cursor/rules vs project rules
- [**913-compliance-script-output.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/913-compliance-script-output.mdc) - Standardizes output and exit codes for compliance/validation scripts
- [**913-frontend-init.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/913-frontend-init.mdc) - Guides initialization of new Next.js frontend project.
- [**914-pytest-scenario-alternative.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/914-pytest-scenario-alternative.mdc) - Outlines pytest-scenario as an alternative for scenario testing.
- [**915-agent-state-lifecycle.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/915-agent-state-lifecycle.mdc) - Agent state and lifecycle management guidelines
- [**916-ai-codebase-interaction-model.mdc**](mdc:VANTA/VANTA/VANTA/916-ai-codebase-interaction-model.mdc) - Clarifies AI's model for interacting with the codebase.
- [**920-agent-resource-conventions.mdc**](mdc:VANTA/VANTA/VANTA/920-agent-resource-conventions.mdc) - Canonical conventions for VANTA agent resource loading and pathing.
- [**920-mcp-tool-integration.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/920-mcp-tool-integration.mdc) - Defines MCP tool integration and trigger patterns.
- [**921-mcp-server-integration.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/921-mcp-server-integration.mdc) - Defines server-side MCP tool integration for agents.
- [**921-vanta-mcp-signal-schema.mdc**](mdc:VANTA/VANTA/VANTA/921-vanta-mcp-signal-schema.mdc) - Defines standard schema for MCP (Orchestrator) signals.
- [**922-agentic-replay-log-schema.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/922-agentic-replay-log-schema.mdc) - Defines the schema and guidelines for logging to agentic_replay.log.jsonl.
- [**923-agentic-build-validate.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/923-agentic-build-validate.mdc) - Standard for the automated Agentic Build and Validate Ritual (CI/CD).
- [**924-cascade-executor.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/924-cascade-executor.mdc) - Cascade Executor Implementation and Usage Standard
- [**925-cascade-agent-swarm-activation.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/925-cascade-agent-swarm-activation.mdc) - Protocol for Layer 2 Agent Swarm activation.
- [**926-vanta-external-mcp-integration.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/926-vanta-external-mcp-integration.mdc) - Standard for integrating external MCP tools into VANTA.
- [**930-layer3-cli-api-activation.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/930-layer3-cli-api-activation.mdc) - Protocol for Layer 3 CLI/API activation.
- [**950-project-scheduler-bootstrap.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/950-project-scheduler-bootstrap.mdc) - Protocol to guide AI in bootstrapping project schedulers.
- [**960-vanta-task-scheduling.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/960-vanta-task-scheduling.mdc) - Defines standards for task scheduling and advanced trigger definitions.
- [**agent_cascade_definitions.mdc**](mdc:VANTA/VANTA/VANTA/agent_cascade_definitions.mdc) - Defines agent cascade profiles, triggers, and sequences.

### Coding Agent Patterns (1000 Series)
- [**1000-coding_agent-feedback_instrumentation.mdc**](mdc:VANTA/VANTA/VANTA/1000-coding_agent-feedback_instrumentation.mdc) - Ensure RL-driven features log user feedback events
- [**1001-coding_agent-scheduled_tasks.mdc**](mdc:VANTA/VANTA/VANTA/1001-coding_agent-scheduled_tasks.mdc) - Enforce proper scheduling libraries for recurring tasks
- [**1002-coding_agent-subprocess_security.mdc**](mdc:VANTA/VANTA/VANTA/1002-coding_agent-subprocess_security.mdc) - Mandate secure subprocess usage with timeouts and backoff
- [**1003-coding_agent-external_api_resilience.mdc**](mdc:VANTA/VANTA/VANTA/1003-coding_agent-external_api_resilience.mdc) - Require environment-based credentials and resilient HTTP calls
- [**1004-coding_agent-hyperparam_tuning.mdc**](mdc:VANTA/VANTA/VANTA/1004-coding_agent-hyperparam_tuning.mdc) - Structure hyperparameter tuning with dataclass results and atomic persistence
- [**1005-coding_agent-ci_cd_integration.mdc**](mdc:VANTA/VANTA/VANTA/1005-coding_agent-ci_cd_integration.mdc) - CI/CD pipeline integration with env token handling
- [**1006-coding_agent-cli_tooling.mdc**](mdc:VANTA/VANTA/VANTA/1006-coding_agent-cli_tooling.mdc) - CLI tools with argparse/typer, JSON schema validation, and templating
- [**1007-coding_agent-admin_ui.mdc**](mdc:VANTA/VANTA/VANTA/1007-coding_agent-admin_ui.mdc) - Schema-driven admin UI forms and API routes
- [**1008-coding_agent-plan_sync.mdc**](mdc:VANTA/VANTA/VANTA/1008-coding_agent-plan_sync.mdc) - Synchronize code changes with project plan documentation
- [**1009-coding_agent-env_template.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/1009-coding_agent-env_template.mdc) - Validate `.env.template` presence and format
- [**1010-coding_agent-test_coverage.mdc**](mdc:VANTA/VANTA/VANTA/1010-coding_agent-test_coverage.mdc) - Require tests for new modules with coverage thresholds
- [**1011-coding_agent-framework.mdc**](mdc:VANTA/VANTA/VANTA/1011-coding_agent-framework.mdc) - Scaffold a generic multi-agent framework
- [**1012-coding_agent-ide_preprompt.mdc**](mdc:VANTA/VANTA/VANTA/1012-coding_agent-ide_preprompt.mdc) - Enforce IDE agent pre-prompt wrapping
- [**1013-coding_agent-moe_analysis.mdc**](mdc:VANTA/VANTA/VANTA/1013-coding_agent-moe_analysis.mdc) - Encourage MoE for complex analysis
- [**1014-coding_agent-best_of_n.mdc**](mdc:VANTA/VANTA/VANTA/1014-coding_agent-best_of_n.mdc) - Suggest Best-of-N for solution generation
- [**1015-coding_agent-coe_delegation.mdc**](mdc:VANTA/VANTA/VANTA/1015-coding_agent-coe_delegation.mdc) - Recommend CoE delegation for complex actions
- [**1016-coding_agent-coe_invocation.mdc**](mdc:VANTA/VANTA/VANTA/1016-coding_agent-coe_invocation.mdc) - Standardize CoE invocation and result handling
- [**1017-coding_agent-config_convention.mdc**](mdc:VANTA/VANTA/VANTA/1017-coding_agent-config_convention.mdc) - Suggest standard locations and naming for agent configuration files
- [**1018-coding_agent-task_schema.mdc**](mdc:VANTA/VANTA/VANTA/1018-coding_agent-task_schema.mdc) - Enforce standard task_data schema for agent communication
- [**1019-fastapi-streaming.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/1019-fastapi-streaming.mdc) - FastAPI SSE streaming best practices

### LangChain Integration (1100 Series)
- [**1100-L1-LangChainIntegrationGuidance.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/1100-L1-LangChainIntegrationGuidance.mdc) - Guidance for L1 AI assisting with L2 LangChain integration.

### Utility & Miscellaneous
- [**110-env-config.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/110-env-config.mdc) - Environment variable configuration and best practices.
- [**environment-variables.mdc**](mdc:VANTA/VANTA/VANTA/environment-variables.mdc) - Environment variable guidelines
- [**form-handling.mdc**](mdc:VANTA/VANTA/VANTA/form-handling.mdc) - Form handling guidelines
- [**utilities.mdc**](mdc:VANTA/VANTA/VANTA/utilities.mdc) - Utility function guidelines
- [**logging.mdc**](mdc:VANTA/VANTA/VANTA/logging.mdc) - Logging guidelines
- [**cleaner.mdc**](mdc:VANTA/VANTA/VANTA/cleaner.mdc) - Code cleanup and maintenance
- [**page-structure.mdc**](mdc:VANTA/VANTA/VANTA/page-structure.mdc) - Page structure guidelines
- [**project-structure.mdc**](mdc:VANTA/VANTA/VANTA/project-structure.mdc) - Project organization
- [**cursor-rules.mdc**](mdc:VANTA/VANTA/VANTA/cursor-rules.mdc) - Managing Cursor MDC rules
- [**cursor.mdc**](mdc:VANTA/VANTA/VANTA/cursor.mdc) - Cursor IDE configuration
- [**llm.mdc**](mdc:VANTA/VANTA/VANTA/llm.mdc) - LLM integration guidelines
- [**swarm-config.mdc**](mdc:VANTA/VANTA/VANTA/.cursor/rules/swarm-config.mdc) - Standards for swarm registry and configuration YAML files.

## 🔍 Common Rule Combinations

### Frontend Development
```
@index.mdc @000-base.mdc @100-next-components.mdc @ui-components.mdc
```