{
  "timestamp": "2025-05-25T23:35:34.944Z",
  "executionTime": 54,
  "targetDirectory": "C:\\FamilyDocRepo",
  "totalFiles": 201,
  "mcpFiles": [
    {
      "relativePath": "docs\\integrations\\mcp_bridge.md",
      "fullPath": "C:\\FamilyDocRepo\\docs\\integrations\\mcp_bridge.md",
      "mcpReferences": 107,
      "fileSize": 7105,
      "preview": "# Integrating with External MCP Services via MCPBridge\nThe `MCPBridge` components (`MCPBridgeCore` and `MCPBridgeAgent`) provide a standardized way for VANTA projects to interact with external Master Control Program (MCP) services. This allows VANTA agents to leverage specialized tools, code interpr...",
      "patterns": [
        "MCP",
        "mcp",
        "Master Control Program",
        "tools, code interpreters, or orchestration",
        "API pattern), `MCPBridgeCore` might need to be extended with new methods. Correspondingly, `MCPBridge",
        "API keys (`MCP_BRIDGE",
        "MCPBridgeCore` implements retries for network errors and 5xx server",
        "MCPBridgeCore` implements retries for network errors and 5xx server errors. Client",
        "MCP Services via MCPBridge",
        "MCPBridge` components (`MCPBridgeCore` and `MCPBridge",
        "mcp_bridge.MCPBridge",
        "mcp_bridge_agent.MCPBridgeAgent`**: A VANTA agent that acts as an adapter. It receives tasks from `VantaMasterCore` (or other agents) and uses `MCPBridge",
        "MCP Bridge is typically managed in `vanta_seed/config/agents/mcp_bridge",
        "MCP_BRIDGE",
        "mcp_bridge",
        "MCPBridge",
        "mcp_tools: \"list_tools\"      # Task 'discover_mcp_tools' calls MCPBridge",
        "mcp_tool: \"execute_tool\"          # Task 'run_mcp_tool' calls MCPBridge",
        "mcp_job_status: \"get_status\"    # Task 'check_mcp_job_status' calls MCPBridge",
        "mcp_bridge_core` and `mcp_bridge_agent`) to the `MCPBridge",
        "MCP, other VANTA agents or `VantaMasterCore` will send a task to the `MCPBridge",
        "mcp_action` (string, required): The high-level action for the `MCPBridge",
        "mcp_bridge_main\", // Target MCPBridge",
        "MCPBridgeAgent` will return a task result with `status: \"error\"` or `status: \"failure\"`, an `error_message`, and potentially `output` containing details from `MCPBridge",
        "MCP requires more than the standard `list_tools` and `execute_tool` actions (or a different API pattern), `MCPBridgeCore` might need to be extended with new methods. Correspondingly, `MCPBridge",
        "MCPBridge` components (`MCPBridgeCore` and `MCPBridgeAgent`) provide a standardized way for VANTA projects to interact with external Master Control Program (MCP) services. This allows VANTA agents to leverage specialized tool",
        "mcp_tools: \"list_tools\"      # Task 'discover_mcp_tools' calls MCPBridgeCore.list_tool",
        "mcp_tool: \"execute_tool\"          # Task 'run_mcp_tool' calls MCPBridgeCore.execute_tool",
        "mcp_action` (string, required): The high-level action for the `MCPBridgeAgent` to perform. This is typically one of the keys from the `action_mappings` in the agent's configuration (e.g., `\"discover_mcp_tools\"`, `\"run_mcp_tool\"`). It can also be the direct method names `\"list_tools\"`, `\"execute_tool",
        "mcp_action` maps to `\"execute_tool\"`. Specifies the name of the tool",
        "mcp_action` maps to `\"execute_tool\"` and the tool expects parameters. A dictionary of parameters to pass to the MCP tool",
        "MCP Tool",
        "mcp_action\": \"discover_mcp_tool",
        "mcp_action\": \"run_mcp_tool",
        "MCPBridgeAgent` output (on success, structure depends on MCP tool",
        "MCP's tool",
        "MCP action 'execute_tool",
        "MCP requires more than the standard `list_tools` and `execute_tool",
        "MCP_BRIDGE_API_URL`: **Required**. The full URL of the external MCP's single API endpoint",
        "MCP endpoint"
      ]
    },
    {
      "relativePath": "docs\\plan.md",
      "fullPath": "C:\\FamilyDocRepo\\docs\\plan.md",
      "mcpReferences": 1,
      "fileSize": 9125,
      "preview": "- Set up agent communication channels",
      "patterns": [
        "agent communication"
      ]
    }
  ],
  "mcpReferences": 108,
  "topFindings": [
    {
      "type": "Files with .md extension",
      "fileCount": 2,
      "totalReferences": 108,
      "topFiles": [
        {
          "relativePath": "docs\\integrations\\mcp_bridge.md",
          "fullPath": "C:\\FamilyDocRepo\\docs\\integrations\\mcp_bridge.md",
          "mcpReferences": 107,
          "fileSize": 7105,
          "preview": "# Integrating with External MCP Services via MCPBridge\nThe `MCPBridge` components (`MCPBridgeCore` and `MCPBridgeAgent`) provide a standardized way for VANTA projects to interact with external Master Control Program (MCP) services. This allows VANTA agents to leverage specialized tools, code interpr...",
          "patterns": [
            "MCP",
            "mcp",
            "Master Control Program",
            "tools, code interpreters, or orchestration",
            "API pattern), `MCPBridgeCore` might need to be extended with new methods. Correspondingly, `MCPBridge",
            "API keys (`MCP_BRIDGE",
            "MCPBridgeCore` implements retries for network errors and 5xx server",
            "MCPBridgeCore` implements retries for network errors and 5xx server errors. Client",
            "MCP Services via MCPBridge",
            "MCPBridge` components (`MCPBridgeCore` and `MCPBridge",
            "mcp_bridge.MCPBridge",
            "mcp_bridge_agent.MCPBridgeAgent`**: A VANTA agent that acts as an adapter. It receives tasks from `VantaMasterCore` (or other agents) and uses `MCPBridge",
            "MCP Bridge is typically managed in `vanta_seed/config/agents/mcp_bridge",
            "MCP_BRIDGE",
            "mcp_bridge",
            "MCPBridge",
            "mcp_tools: \"list_tools\"      # Task 'discover_mcp_tools' calls MCPBridge",
            "mcp_tool: \"execute_tool\"          # Task 'run_mcp_tool' calls MCPBridge",
            "mcp_job_status: \"get_status\"    # Task 'check_mcp_job_status' calls MCPBridge",
            "mcp_bridge_core` and `mcp_bridge_agent`) to the `MCPBridge",
            "MCP, other VANTA agents or `VantaMasterCore` will send a task to the `MCPBridge",
            "mcp_action` (string, required): The high-level action for the `MCPBridge",
            "mcp_bridge_main\", // Target MCPBridge",
            "MCPBridgeAgent` will return a task result with `status: \"error\"` or `status: \"failure\"`, an `error_message`, and potentially `output` containing details from `MCPBridge",
            "MCP requires more than the standard `list_tools` and `execute_tool` actions (or a different API pattern), `MCPBridgeCore` might need to be extended with new methods. Correspondingly, `MCPBridge",
            "MCPBridge` components (`MCPBridgeCore` and `MCPBridgeAgent`) provide a standardized way for VANTA projects to interact with external Master Control Program (MCP) services. This allows VANTA agents to leverage specialized tool",
            "mcp_tools: \"list_tools\"      # Task 'discover_mcp_tools' calls MCPBridgeCore.list_tool",
            "mcp_tool: \"execute_tool\"          # Task 'run_mcp_tool' calls MCPBridgeCore.execute_tool",
            "mcp_action` (string, required): The high-level action for the `MCPBridgeAgent` to perform. This is typically one of the keys from the `action_mappings` in the agent's configuration (e.g., `\"discover_mcp_tools\"`, `\"run_mcp_tool\"`). It can also be the direct method names `\"list_tools\"`, `\"execute_tool",
            "mcp_action` maps to `\"execute_tool\"`. Specifies the name of the tool",
            "mcp_action` maps to `\"execute_tool\"` and the tool expects parameters. A dictionary of parameters to pass to the MCP tool",
            "MCP Tool",
            "mcp_action\": \"discover_mcp_tool",
            "mcp_action\": \"run_mcp_tool",
            "MCPBridgeAgent` output (on success, structure depends on MCP tool",
            "MCP's tool",
            "MCP action 'execute_tool",
            "MCP requires more than the standard `list_tools` and `execute_tool",
            "MCP_BRIDGE_API_URL`: **Required**. The full URL of the external MCP's single API endpoint",
            "MCP endpoint"
          ]
        },
        {
          "relativePath": "docs\\plan.md",
          "fullPath": "C:\\FamilyDocRepo\\docs\\plan.md",
          "mcpReferences": 1,
          "fileSize": 9125,
          "preview": "- Set up agent communication channels",
          "patterns": [
            "agent communication"
          ]
        }
      ]
    }
  ]
}