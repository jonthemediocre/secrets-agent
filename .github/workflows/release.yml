name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller
          
      - name: Build Windows executable
        run: python build_windows_exe.py
        
      - name: Upload Windows executable
        uses: actions/upload-artifact@v3
        with:
          name: windows-executable
          path: dist/secrets_agent.exe
  
  build-docker:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: vanta/secrets-agent
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            latest
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  create-release:
    needs: [build-windows, build-docker]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download Windows executable
        uses: actions/download-artifact@v3
        with:
          name: windows-executable
          path: ./dist
      
      - name: Get VS Code extension
        uses: actions/download-artifact@v3
        with:
          name: secrets-agent-extension
          path: ./dist
      
      - name: Create ZIP archive
        run: |
          cd dist
          zip -r SecretsAgent_${{ github.ref_name }}.zip *
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/SecretsAgent_${{ github.ref_name }}.zip
            dist/secrets_agent.exe
            dist/*.vsix
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 