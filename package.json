{
  "name": "secrets-agent",
  "version": "1.3.4",
  "description": "Advanced Secrets Management Platform with AI-powered governance and multi-platform support",
  "main": "dist/index.js",
  "type": "module",
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "build": "npm run clean && npm run lint:check && npm run type-check && tsc",
    "start": "npm run dev",
    "dev": "concurrently \"npm run dev:web\" \"npm run dev:api\" \"npm run dev:sync\"",
    "dev:web": "cd app && npm run dev",
    "dev:api": "node dist/cli.js",
    "dev:sync": "npm run build && node -e \"console.log('ðŸ”„ Universal sync coordinator ready')\"",
    "dev:mobile": "cd apps/mobile && npm run start",
    "dev:desktop": "cd apps/desktop && npm run dev",
    "dev:ai-gateway": "cd apps/ai-gateway && npm run dev",
    "dev:all": "concurrently \"npm run dev:web\" \"npm run dev:mobile\" \"npm run dev:desktop\"",
    "build:web": "cd app && npm run build",
    "build:mobile": "cd apps/mobile && npm run build:android && npm run build:ios",
    "build:desktop": "cd apps/desktop && npm run build",
    "build:ai-gateway": "cd apps/ai-gateway && npm run build",
    "build:all": "npm run build && npm run build:web && npm run build:mobile && npm run build:desktop",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "jest",
    "test:integration": "npm run test:cli && npm run test:vault",
    "test:cli": "node dist/cli.js test",
    "test:vault": "node dist/cli.js vault:status",
    "clean": "rimraf dist tsconfig.tsbuildinfo",
    "lint": "eslint src/ --fix",
    "lint:check": "eslint src/",
    "type-check": "tsc --noEmit",
    "setup:platforms": "npm install && cd apps/mobile && npm install && cd ../desktop && npm install && cd ../ai-gateway && npm install && cd ../../",
    "universal:dev": "concurrently \"npm run dev:api\" \"npm run dev:web\" \"npm run dev:mobile\" \"npm run dev:desktop\" \"npm run dev:ai-gateway\"",
    "universal:build": "npm run build:web && npm run build:mobile && npm run build:desktop && npm run build:ai-gateway",
    "universal:test": "npm run test && cd apps/mobile && npm test && cd ../desktop && npm test && cd ../ai-gateway && npm test && cd ../../",
    "build:watch": "tsc --watch",
    "build:prod": "cross-env NODE_ENV=production npm run build",
    "dev:server": "nodemon",
    "dev:watch": "concurrently \"npm run build:watch\" \"npm run dev:server\"",
    "start:prod": "cross-env NODE_ENV=production node dist/index.js",
    "test:e2e": "jest --testPathPattern=e2e --runInBand",
    "test:e2e:mcp-bridge": "jest --testPathPattern=e2e/mcp-bridge --runInBand",
    "test:e2e:cli": "jest --testPathPattern=e2e/cli --runInBand",
    "test:e2e:governance": "jest --testPathPattern=e2e/governance --runInBand",
    "test:e2e:setup": "tsx scripts/setup-e2e.ts",
    "test:e2e:cleanup": "tsx scripts/cleanup-e2e.ts",
    "test:watch": "jest --watch --testPathPattern=unit",
    "test:coverage": "jest --coverage --coverageReporters=lcov --coverageReporters=text",
    "test:performance": "tsx scripts/performance-tests.ts",
    "test:setup": "tsx scripts/setup-tests.ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "lint:security": "eslint src --ext .ts --config .eslintrc.security.js",
    "format": "prettier --write 'src/**/*.ts' 'tests/**/*.ts' '*.{js,json,md}'",
    "format:check": "prettier --check 'src/**/*.ts' 'tests/**/*.ts' '*.{js,json,md}'",
    "security:audit": "npm audit --audit-level=moderate",
    "security:scan": "npm run security:audit && npm run lint:security && snyk test",
    "security:fix": "npm audit fix",
    "security:report": "npm audit --json > security-report.json && snyk test --json > snyk-report.json",
    "deps:check": "npm-check-updates",
    "deps:update": "npm-check-updates -u && npm install",
    "deps:audit": "npm audit && npm outdated",
    "cli": "tsx src/cli/index.ts",
    "cli:scan": "tsx src/cli/index.ts scan",
    "cli:secrets": "tsx src/cli/index.ts secrets",
    "cli:mcp": "tsx src/cli/index.ts mcp",
    "cli:mcp:status": "tsx src/cli/index.ts mcp status",
    "cli:mcp:bridges": "tsx src/cli/index.ts mcp list-bridges",
    "cli:mcp:tools": "tsx src/cli/index.ts mcp list-tools",
    "serve": "tsx src/server/index.ts",
    "serve:prod": "cross-env NODE_ENV=production node dist/server/index.js",
    "serve:dev": "nodemon --exec tsx src/server/index.ts",
    "db:migrate": "tsx src/database/migrate.ts",
    "db:seed": "tsx src/database/seed.ts",
    "db:reset": "npm run db:migrate && npm run db:seed",
    "docker:build": "docker build -t secrets-agent .",
    "docker:run": "docker run -p 3000:3000 secrets-agent",
    "docker:test": "docker-compose -f docker-compose.test.yml up --abort-on-container-exit",
    "wait-for-services": "tsx scripts/wait-for-services.ts",
    "verify:production": "tsx scripts/verify-production.ts",
    "release:prepare": "npm run test && npm run build:prod && npm run security:scan",
    "release:patch": "npm version patch && git push --tags",
    "release:minor": "npm version minor && git push --tags",
    "release:major": "npm version major && git push --tags",
    "ci:prepare": "npm ci",
    "ci:test": "npm run test:unit && npm run test:integration",
    "ci:build": "npm run build:prod",
    "ci:security": "npm run security:scan"
  },
  "keywords": [
    "secrets-management",
    "security",
    "cli",
    "typescript",
    "mcp",
    "agent",
    "vulnerability-scanning"
  ],
  "author": "Secrets Management Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/secrets-agent/secrets-management.git"
  },
  "bugs": {
    "url": "https://github.com/secrets-agent/secrets-management/issues"
  },
  "homepage": "https://github.com/secrets-agent/secrets-management#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "express": "^4.18.2",
    "jsonwebtoken": "^9.0.2",
    "dotenv": "^16.3.1",
    "commander": "^11.1.0",
    "chalk": "^5.3.0",
    "uuid": "^9.0.1",
    "axios": "^1.6.2",
    "expo": "^51.0.0",
    "expo-auth-session": "^5.5.2",
    "expo-crypto": "^13.0.2",
    "expo-router": "^3.5.23",
    "expo-secure-store": "^13.0.2",
    "expo-status-bar": "^1.12.1",
    "react-native": "^0.74.5",
    "react-native-web": "^0.19.12",
    "@expo/metro-config": "^0.18.11",
    "@react-native-community/cli": "^13.6.9",
    "stripe": "^14.10.0",
    "@paypal/checkout-server-sdk": "^1.0.3",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "nodemailer": "^6.9.8",
    "winston": "^3.11.0",
    "mongoose": "^8.0.3",
    "redis": "^4.6.11"
  },
  "devDependencies": {
    "@types/commander": "^2.12.2",
    "@types/fs-extra": "^11.0.4",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.11.16",
    "@types/uuid": "^9.0.8",
    "@types/yaml": "^1.9.7",
    "@typescript-eslint/eslint-plugin": "^7.7.1",
    "@typescript-eslint/parser": "^7.7.1",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "eslint": "^8.57.0",
    "jest": "^29.7.0",
    "nodemon": "^3.1.0",
    "prettier": "^3.2.5",
    "snyk": "^1.1291.1",
    "ts-jest": "^29.1.2",
    "tsx": "^4.7.1",
    "typescript": "^5.4.5"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": ["<rootDir>/src", "<rootDir>/tests"],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/*.test.ts",
      "**/*.spec.ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/types/**",
      "!src/**/*.test.ts",
      "!src/**/*.spec.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": ["text", "lcov", "html"],
    "coverageThreshold": {
      "global": {
        "branches": 70,
        "functions": 70,
        "lines": 70,
        "statements": 70
      }
    },
    "setupFilesAfterEnv": ["<rootDir>/tests/setup.ts"],
    "testTimeout": 30000
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "security",
      "import",
      "node"
    ],
    "extends": [
      "eslint:recommended",
      "@typescript-eslint/recommended",
      "plugin:security/recommended",
      "plugin:import/recommended",
      "plugin:import/typescript",
      "plugin:node/recommended",
      "prettier"
    ],
    "rules": {
      "security/detect-object-injection": "error",
      "security/detect-eval-with-expression": "error",
      "security/detect-non-literal-fs-filename": "warn",
      "security/detect-child-process": "warn",
      "security/detect-buffer-noassert": "error",
      "security/detect-disable-mustache-escape": "error",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/explicit-function-return-type": "warn",
      "import/order": "error",
      "import/no-unresolved": "error",
      "node/no-unpublished-import": "off",
      "node/no-missing-import": "off"
    },
    "settings": {
      "import/resolver": {
        "typescript": {
          "alwaysTryTypes": true
        }
      }
    },
    "env": {
      "node": true,
      "es2022": true,
      "jest": true
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false
  },
  "nodemonConfig": {
    "watch": ["src"],
    "ext": "ts",
    "exec": "tsx src/server/index.ts"
  },
  "overrides": {
    "semver": "^7.5.4"
  },
  "resolutions": {
    "semver": "^7.5.4",
    "tough-cookie": "^4.1.3"
  }
}
